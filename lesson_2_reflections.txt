Q: What happens when you initialize a repository? Why do you need to do it?

Git creates a hidden folder called ".git" in the directory and makes an initial commit to start the repository. By default, no files are included or tracked

Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area compares differences between the repository and the working directory and gives you a chance to review them before deciding to commit or revert back to previous versions. It makes it easy to only commit changes you like as well.

Q: How can you use the staging area to make sure you have one commit per logical change?

You can make a whole bunch of changes at once, and then use the staging area to separate your commits into one logical change. You don't have to commit everything at once, you can separate your work out into dozens of commits if you like.

Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would help most when making experimental changes to your files - you do not need to be certain if something will work, but you can be certain that you'll be able to restore a complete working version of your code at any time. Also for regional differences or possibly operator differences.

